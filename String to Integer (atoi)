class Solution:
    def myAtoi(self, s: str) -> int:
        i, n = 0, len(s)
        INT_MAX, INT_MIN = 2**31 - 1, -2**31

        # 1. Skip leading spaces
        while i < n and s[i] == " ":
            i += 1

        # If string is empty after trimming
        if i == n:
            return 0

        # 2. Handle sign
        sign = 1
        if s[i] == "+":
            i += 1
        elif s[i] == "-":
            sign = -1
            i += 1

        # 3. Convert digits
        num = 0
        while i < n and s[i].isdigit():
            digit = int(s[i])

            # 4. Handle overflow before adding digit
            if num > (INT_MAX - digit) // 10:
                return INT_MAX if sign == 1 else INT_MIN

            num = num * 10 + digit
            i += 1

        return num * sign
